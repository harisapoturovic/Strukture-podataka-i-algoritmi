#include <iostream>
using namespace std;

class Tacka3D
{
public:
	int x, y, z;
	Tacka3D(int x=0, int y=0, int z=0)
	{
		this->x = x;
		this->y = y;
		this->z = z;
	}
	friend ostream& operator<<(ostream& cout, Tacka3D& tacka)
	{
		cout << "(" << tacka.x << ", " << tacka.y << ", " << tacka.z << ")" << endl;
		return cout;
	}
};

class PrioritetniRedSekv
{
	int max = 10;
	int brojac = 0;
	Tacka3D* niz = new Tacka3D[max];
	int udaljenost(Tacka3D tacka)
	{
		return sqrt(pow(0 - tacka.x, 2) + pow(0 - tacka.y, 2) + pow(0 - tacka.z, 2));
	}
public:
	void dodaj(Tacka3D tacka)
	{
		if (brojac == max)
			throw exception("Red je pun");
		niz[brojac] = tacka;
		brojac++;
	}
	void ukloni()
	{
		if (brojac == 0)
			throw exception("Red je prazan");
		int nizI = 0;
		int nizV = udaljenost(niz[0]);
		for (int i = 1; i < brojac; i++)
		{
			if (udaljenost(niz[i]) < nizV)
			{
				nizI = i;
				nizV = udaljenost(niz[i]);
			}
		}
		brojac--;
		niz[nizI] = niz[brojac];
	}
	void ispis()
	{
		for (int i = 0; i < brojac; i++)
		{
			cout << niz[i];
		}
		cout << endl;
	}
};

void main() {
	PrioritetniRedSekv pr;
	pr.dodaj(Tacka3D(1, 2, 3));
	pr.dodaj(Tacka3D(2, 3, 4));
	pr.dodaj(Tacka3D(3, 4, 5));
	pr.dodaj(Tacka3D(4, 5, 6));
	pr.dodaj(Tacka3D(5, 6, 7));
	pr.ispis();
	cout << "-----------------------------"<<endl;
	pr.ukloni();
	pr.ispis();
}